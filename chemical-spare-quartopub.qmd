---
title: "China's rise in the chemical space"
format:
  html:
    grid: 
      body-width: 1400px
    resources: 
      - shinylive-sw.js
filters:
  - shinylive
---

Interactive visualization of the paper ["China's rise in the chemical space and the decline of US influence."](https://chemrxiv.org/engage/chemrxiv/article-details/67920ada6dde43c908f688f6). Explore the shifting landscape of chemical research from 1996 to 2022, highlighting China's growing dominance and the corresponding decline of US influence. The data includes contributions from the tops eight countries, as seen in the original paper. At the end of the page, you can find the visualization for the remaining countries. 

```{shinylive-r}
#| standalone: true
#| viewerHeight: 1000
library(shiny)
library(plotly)


#####################
## Data Preparation #
#####################

data_url <- "https://raw.githubusercontent.com/santi-rios/China-Chemical-Dominance/refs/heads/main/data/countries_with_chemicals_joined.csv"

# Read data with base R instead of data.table
df <- read.csv(data_url)
df$Country <- as.factor(df$Country)

#############################
## Shiny UI Construction   ##
#############################

ui <- fluidPage(
  # Removed bslib dependency
  tags$style(HTML("
    .card { margin-bottom: 20px; border: 1px solid #ddd; border-radius: 8px; }
    .card-header { padding: 10px; background-color: #2c3e50; color: white; }
    .card-body { padding: 15px; }
  ")),
  
  # Control Panel
  div(class = "card",
      div(class = "card-header", "Select Year and Countries to Visualize"),
      div(class = "card-body",
          sliderInput(
            inputId = "year", 
            label = "Year",
            min = min(df$Year, na.rm = TRUE),
            max = max(df$Year, na.rm = TRUE),
            value = min(df$Year, na.rm = TRUE),
            step = 1,
            width = "100%"
          ),
          selectInput(
            inputId = "countrySelector",
            label = "Select Countries:",
            choices = sort(unique(df$Country)), 
            selected = c("China", "US"),
            multiple = TRUE,
            width = "100%"
          )
      )
  ),
  
  # Visualization Panel
  div(class = "card",
      div(class = "card-header", "Interactive Visualizations"),
      div(class = "card-body",
          plotlyOutput("combinedPlot", height = "500px"),
          plotlyOutput("worldMap", height = "400px")
      )
  )
)

#############################
## Shiny Server Logic      ##
#############################

server <- function(input, output, session) {
  selected_countries <- reactive({
    if(is.null(input$countrySelector)) character(0) else input$countrySelector
  })
  
  filtered_data <- reactive({
    subset(df, Country %in% selected_countries() & Year <= input$year)
  })
  
  output$combinedPlot <- renderPlotly({
    data <- filtered_data()
    if(nrow(data) == 0) return(plotly_empty())
    
    plot_ly(data) %>%
      add_trace(
        type = "scatter",
        mode = "lines+markers",
        x = ~Year,
        y = ~Value.x,
        color = ~Country,
        colors = c(
            # Country colors (using Set1 palette)
            "China" = "#e41a1c",  # Red for China
            "US" = "#0184d1",
            "Germany" = "#282828",
            "Japan" = "#6b6b6b",
            "France" = "#a2477f",
            "UK" = "#000038",
            "India" = "#ff9b36",
            "Russia" = "#ff85b4"
            # Add more countries if needed
            
            # # Substance colors
            # "Organometallics" = "#4daf4a",  # Green
            # "Rare-earths" = "#984ea3"       # Purple
          ),
        hoverinfo = "x+y+name"
      ) %>%
      layout(
        title = "Contribution Index",
        yaxis = list(title = "% Contribution Index"),
        showlegend = TRUE
      )
  })
  
  output$worldMap <- renderPlotly({
    data <- subset(df, Year == input$year)
    
    plot_geo(data, height = 300) %>%
      add_trace(
        z = ~Value.x,
        color = ~Value.x,
        colors = "Blues",
        locations = ~iso3c,
        hoverinfo = "text",
        text = ~paste(Country, "<br>Value:", round(Value.x, 2))
      ) %>%
      layout(
        title = paste("Global Distribution -", input$year),
        geo = list(showframe = FALSE, projection = list(type = "natural earth"))
      )
  })
}

shinyApp(ui, server)
```